name: deploy-toy-website-test
concurrency: toy-company #ensures that one instance of the workflow will run at a time for this group

on:
  push:
    branches:
      - main #runs when there is a push to the main branch

permissions:
  id-token: write #required for open id cpnnect to authenticate to azure
  contents: read #allows reading repo contents

env:
  AZURE_RESOURCEGROUP_NAME: ToyWebsiteTest
  ENVIRONMENT_TYPE: Test

jobs: #checks out code and runs the linter, start of multiple jobs
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Node.js
      run: az bicep build --file deploy/main.bicep

  validate: #defines steps to check out the code, sign in, and use the ARM deploy action to validate the deployment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - uses: azure/arm-deploy@v1
      name: Run preflight validation
      with:
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./deploy/main.bicep
        parameters: environmentType=${{ env.ENVIRONMENT_TYPE }} location=eastus
        deploymentMode: Validate
  deploy:
    runs-on: ubuntu-latest
    needs: [lint,validate] #ensures that the lint and validate jobs run before the deploy job
    steps:
    - uses: actions/checkout@v3
    - uses: azure/login@v1
      name: Sign in to Azure
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        subscription-id: "6ca76c90-aec6-46df-ab70-dd59b9ccef67"
    - uses: azure/arm-deploy@v1
      name: Deploy website
      with:
        failOnStdError: false #allows the workflow to continue even if the deployment fails
        deploymentName: ${{ github.run_number }}
        resourceGroupName: ${{ env.AZURE_RESOURCEGROUP_NAME }}
        template: ./deploy/main.bicep
        parameters: 
          environmentType=${{ env.ENVIRONMENT_TYPE }} location=eastus
